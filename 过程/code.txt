%模拟退火
%添加平台后求解新的分配方式
%建立初始解，都找最近的平台
jiapingtai=[92,48,40,29];%添加的平台
col=20;
pingtai=[1:20,jiapingtai];
[M,pingtaishu]=size(pingtai);
jianshi2=ones(1,92);%添加平台后的监视方案
for i=1:92 
   jianshi2(i)=pingtai(1);%假设与第一个警察局最近
   for j=1:pingtaishu %对于第i个没警察局的点，寻找最近的警察局
       if(a(jianshi2(i),i)>a(pingtai(j),i))
           jianshi2(i)=pingtai(j);
       end
   end
end
multijpt0=zeros(pingtaishu,col);%初始解，都找最近的平台
for i=1:92
    [j,k]=find(pingtai==jianshi2(i));
    [M,N]=size(find(multijpt0(k,:)~=0));
    multijpt0(k,N+1)=i;
end


e=0.1^30;L=20000000;at=0.9999;T=1;
multi01=zeros(pingtaishu,col);
multi00=zeros(pingtaishu,col);
multi01=multijpt0;%multi01为新生成的安排方式
multi00=multijpt0;
gzltemp=zeros(1,pingtaishu);
for i=1:pingtaishu %求工作量
    for j=1:col
        if(multi00(i,j)~=0)
            gzltemp(i)=gzltemp(i)+a(pingtai(i),multi00(i,j))*afcs(multi00(i,j));
        end
    end
end
gzltemp=gzltemp*0.1;
fc0=var(gzltemp);%求出初始方差记为fc0


%get multi_temp2 & multi2
%duopingtshu=55;
%multi_temp2=zeros(1,duopingtshu);

jilupingtaishu=zeros(1,92);%计算每个点的可用平台数
for ii=1:92
    for kk=1:pingtaishu
        if(a(pingtai(kk),ii)<30)
            jilupingtaishu(ii)=jilupingtaishu(ii)+1;
        end
    end
end
jj=1;
for ii=1:92
    [M,N]=size(find(pingtai==ii));%N为0时 表示ii不是平台
    if(~N && jilupingtaishu(ii)>1)%不是平台而且可用平台数大于1则记录
        multi_temp2(jj)=ii;
        jj=jj+1;
    end
end
[temp,duopingtaishu]=size(multi_temp2);
multi2=zeros(duopingtaishu,col);
for ii=1:duopingtaishu %49
    for jj=1:pingtaishu %21
        if(a(multi_temp2(ii),pingtai(jj))<30)%如果ii点离pingtai(jj)距离小于30，把pingtai(jj)加进来
            [M,N]=size(find(multi2(ii,:)));
            multi2(ii,N+1)=pingtai(jj);
        end
    end
end


%退火过程
for k=1:L
    if rand>0.5 %换一个
    
    index=ceil(rand*duopingtaishu);%第index个城市
    sign=multi_temp2(index);%城市编号
    [M,N]=find(multi01==sign);
    multi01(M,N:col)=[multi01(M,N+1:col),0];%在原位置去掉那个城市
    %multi01(i,j:col)=[multi01(i,j+1:col),0];
    for kk=1:col
       if(multi2(index,kk)~=0)
           N=kk;
       end
    end
    %to=multi2(index,ceil(rand*N));%to为随机找个可以管的警察局行丢过去~
    [temp,to]=find(pingtai==multi2(index,ceil(rand*N)));
    for jj=1:col
        if(multi01(to,jj)~=0)%N表示该行的数据个数
            N=jj;
        end
    end
    multi01(to,N+1)=sign;
    
    
    else %换两个
     
    index=ceil(rand*duopingtaishu);%第index个城市
    sign=multi_temp2(index);%城市编号
    [M,N]=find(multi01==sign);
    multi01(M,N:col)=[multi01(M,N+1:col),0];%在原位置去掉那个城市
    %multi01(i,j:col)=[multi01(i,j+1:col),0];
    for kk=1:col
       if(multi2(index,kk)~=0)
           N=kk;
       end
    end
    %to=multi2(index,ceil(rand*N));%to为随机找个可以管的警察局行丢过去~
    [temp,to]=find(pingtai==multi2(index,ceil(rand*N)));
    for jj=1:col
        if(multi01(to,jj)~=0)%N表示该行的数据个数
            N=jj;
        end
    end
    multi01(to,N+1)=sign;
    
    index=ceil(rand*duopingtaishu);%第index个城市
    sign=multi_temp2(index);%城市编号
    [M,N]=find(multi01==sign);
    multi01(M,N:col)=[multi01(M,N+1:col),0];%在原位置去掉那个城市
    %multi01(i,j:col)=[multi01(i,j+1:col),0];
    for kk=1:col
       if(multi2(index,kk)~=0)
           N=kk;
       end
    end
    %to=multi2(index,ceil(rand*N));%to为随机找个可以管的警察局行丢过去~
    [temp,to]=find(pingtai==multi2(index,ceil(rand*N)));
    for jj=1:col
        if(multi01(to,jj)~=0)%N表示该行的数据个数
            N=jj;
        end
    end
    multi01(to,N+1)=sign;
    
    end
    
    gzltemp=zeros(1,pingtaishu);
    for i=1:pingtaishu %求工作量
        for j=1:col
            if(multi01(i,j)~=0)
                gzltemp(i)=gzltemp(i)+a(pingtai(i),multi01(i,j))*afcs(multi01(i,j));
            end
        end
    end
    gzltemp=gzltemp*0.1;
    fc1=var(gzltemp);%求出新方差记为fc1

        
    if(fc1<fc0)%新方差较小，接受新结果
        multi00=multi01;
        fc0=fc1
    elseif(exp((fc0-fc1)/T)>rand)
        multi00=multi01;
        fc0=fc1;
    end

    T=T*at;
    if T<e
        break;
    end
end
sum(gzltemp)
sum(gzltemp)/pingtaishu




%计算新的覆盖率
atemp=a2(372:474,372:474);
afcstemp=afcs(372:474);
pingtaishu=15;
lukoushu=103;
col=35;

jiapingtai=[17 21 40 47 31];%添加的平台
pingtai=[1:pingtaishu,jiapingtai];
[M,pingtaishu]=size(pingtai);

dutym=zeros(103);
for i=1:pingtaishu %遍历平台
    for j=1:103 %遍历路口
        %[temp,ii]=find(pingtai==i-474);
        ii=pingtai(i);
        if(atemp(ii,j)<30)
            dutym(ii,j)=1;
        end
    end
end

inneed=find(sum(dutym)==0);%寻找没警察管的点，用行向量inneed记录
[m,n]=size(inneed)




%匈牙利
function [assignment,cost] = munkres(costMat)

assignment = zeros(1,size(costMat,1));
cost = 0;

validMat = costMat == costMat & costMat < Inf;
bigM = 10^(ceil(log10(sum(costMat(validMat))))+1);
costMat(~validMat) = bigM;


validCol = any(validMat,1);
validRow = any(validMat,2);

nRows = sum(validRow);
nCols = sum(validCol);
n = max(nRows,nCols);
if ~n
    return
end

maxv=10*max(costMat(validMat));

dMat = zeros(n) + maxv;
dMat(1:nRows,1:nCols) = costMat(validRow,validCol);

minR = min(dMat,[],2);
minC = min(bsxfun(@minus, dMat, minR));

zP = dMat == bsxfun(@plus, minC, minR);

starZ = zeros(n,1);
while any(zP(:))
    [r,c]=find(zP,1);
    starZ(r)=c;
    zP(r,:)=false;
    zP(:,c)=false;
end

while 1
    if all(starZ>0)
        break
    end
    coverColumn = false(1,n);
    coverColumn(starZ(starZ>0))=true;
    coverRow = false(n,1);
    primeZ = zeros(n,1);
    [rIdx, cIdx] = find(dMat(~coverRow,~coverColumn)==bsxfun(@plus,minR(~coverRow),minC(~coverColumn)));
    while 1
      
        cR = find(~coverRow);
        cC = find(~coverColumn);
        rIdx = cR(rIdx);
        cIdx = cC(cIdx);
        Step = 6;
        while ~isempty(cIdx)
            uZr = rIdx(1);
            uZc = cIdx(1);
            primeZ(uZr) = uZc;
            stz = starZ(uZr);
            if ~stz
                Step = 5;
                break;
            end
            coverRow(uZr) = true;
            coverColumn(stz) = false;
            z = rIdx==uZr;
            rIdx(z) = [];
            cIdx(z) = [];
            cR = find(~coverRow);
            z = dMat(~coverRow,stz) == minR(~coverRow) + minC(stz);
            rIdx = [rIdx(:);cR(z)];
            cIdx = [cIdx(:);stz(ones(sum(z),1))];
        end
        if Step == 6
            [minval,rIdx,cIdx]=outerplus(dMat(~coverRow,~coverColumn),minR(~coverRow),minC(~coverColumn));            
            minC(~coverColumn) = minC(~coverColumn) + minval;
            minR(coverRow) = minR(coverRow) - minval;
        else
            break
        end
    end
  
    rowZ1 = find(starZ==uZc);
    starZ(uZr)=uZc;
    while rowZ1>0
        starZ(rowZ1)=0;
        uZc = primeZ(rowZ1);
        uZr = rowZ1;
        rowZ1 = find(starZ==uZc);
        starZ(uZr)=uZc;
    end
end


rowIdx = find(validRow);
colIdx = find(validCol);
starZ = starZ(1:nRows);
vIdx = starZ <= nCols;
assignment(rowIdx(vIdx)) = colIdx(starZ(vIdx));
pass = assignment(assignment>0);
pass(~diag(validMat(assignment>0,pass))) = 0;
assignment(assignment>0) = pass;
cost = trace(costMat(assignment>0,assignment(assignment>0)));

function [minval,rIdx,cIdx]=outerplus(M,x,y)
ny=size(M,2);
minval=inf;
for c=1:ny
    M(:,c)=M(:,c)-(x+y(c));
    minval = min(minval,min(M(:,c)));
end
[rIdx,cIdx]=find(M==minval);

